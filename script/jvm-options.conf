# JVM Configuration File - JDK 21 Optimized Settings
# Updated: 2025-06-29
# Compatible with JDK 21+

# ========================================
# Local Development Environment Configuration
# ========================================
LOCAL_JVM_OPTS="\
  -Xms256m -Xmx256m \
  -XX:+UseG1GC \
  -Xlog:gc*:logs/gc-local.log:time,uptime,level,tags \
  -XX:+HeapDumpOnOutOfMemoryError \
  -XX:HeapDumpPath=logs/heapdump.hprof \
  -Dspring.profiles.active=local"

# ========================================
# Development Environment Configuration
# ========================================
DEV_JVM_OPTS="\
  -Xms512m -Xmx512m \
  -XX:+UseG1GC \
  -Xlog:gc*:logs/gc-dev.log:time,uptime,level,tags \
  -XX:+HeapDumpOnOutOfMemoryError \
  -XX:HeapDumpPath=logs/heapdump.hprof \
  -Dspring.profiles.active=dev"

# ========================================
# UAT Environment Configuration
# ========================================
UAT_JVM_OPTS="\
  -Xms2g -Xmx2g \
  -XX:+UseG1GC \
  -Xlog:gc*:logs/gc-uat.log:time,uptime,level,tags \
  -XX:+HeapDumpOnOutOfMemoryError \
  -XX:HeapDumpPath=logs/heapdump.hprof \
  -Dspring.profiles.active=uat"

# ========================================
# COB Environment Configuration
# ========================================
COB_JVM_OPTS="\
  -Xms3g -Xmx3g \
  -XX:+UseG1GC \
  -Xlog:gc*:logs/gc-cob.log:time,uptime,level,tags \
  -XX:+HeapDumpOnOutOfMemoryError \
  -XX:HeapDumpPath=logs/heapdump.hprof \
  -Dspring.profiles.active=cob"

# ========================================
# Production Environment Configuration
# ========================================
PROD_JVM_OPTS="\
  -Xms2g -Xmx2g \
  -XX:+UseG1GC \
  -XX:MaxGCPauseMillis=200 \
  -XX:MaxRAMPercentage=75.0 \
  -Xlog:gc*:/tmp/gc-prod.log:time,uptime,level,tags \
  -XX:+HeapDumpOnOutOfMemoryError \
  -XX:HeapDumpPath=/tmp/heapdump.hprof \
  -XX:+DisableExplicitGC \
  -XX:+ExitOnOutOfMemoryError \
  -Dspring.profiles.active=prod"


# ========================================
# High Concurrency Environment Configuration (JDK 21 Compatible, Stable Only)
# ========================================
STRESS_JVM_OPTS="\
  -Xms4g -Xmx4g \
  -XX:+UseG1GC \
  -XX:MaxGCPauseMillis=200 \
  -XX:MaxRAMPercentage=75.0 \
  -Xlog:gc*:/tmp/gc.log:time,uptime,level,tags \
  -XX:+HeapDumpOnOutOfMemoryError \
  -XX:HeapDumpPath=/tmp/heapdump.hprof \
  -XX:+DisableExplicitGC \
  -XX:+ExitOnOutOfMemoryError \
  -XX:+UseStringDeduplication \
  -XX:+OptimizeStringConcat \
  -XX:+UseCompressedOops \
  -XX:+UseCompressedClassPointers \
  -XX:+TieredCompilation \
  -Djava.net.preferIPv4Stack=true \
  -Dsun.net.inetaddr.ttl=0 \
  -Dsun.net.inetaddr.negative.ttl=0 \
  -Dspring.jmx.enabled=false \
  -Dspring.main.lazy-initialization=true"

# ========================================
# Core Parameter Explanations (JDK 21)
# ========================================

# 1. Heap Memory Settings
#    -Xms -Xmx: Initial and maximum heap size (set to same value to avoid dynamic adjustment)
#    -XX:MaxRAMPercentage: Auto-calculate heap size in container environment (recommended 75%)

# 2. GC Optimization (G1GC - JDK 21 default)
#    -XX:+UseG1GC: Use G1 garbage collector (default since JDK 9)
#    -XX:MaxGCPauseMillis: Target pause time
#    -XX:G1HeapRegionSize: G1 region size (recommend 32m for large memory)

# 3. Container Awareness
#    -XX:MaxRAMPercentage: Auto-calculate heap size (replaces UseContainerSupport)
#    Note: UseContainerSupport is enabled by default in JDK 10+, no need to set explicitly

# 4. GC Logging Configuration (JDK 9+ Unified Logging)
#    -Xlog:gc*: Unified logging format, replaces old -XX:+PrintGCDetails
#    Format: -Xlog:gc*:file:time,uptime,level,tags
#    time: timestamp
#    uptime: JVM uptime
#    level: log level
#    tags: tag information

# 5. Monitoring and Debugging
#    -XX:+HeapDumpOnOutOfMemoryError: Auto-dump on OOM
#    -XX:+ExitOnOutOfMemoryError: Exit JVM on OOM (recommended for production)

# 6. Performance Optimization
#    -XX:+DisableExplicitGC: Disable explicit GC calls
#    -XX:+UseStringDeduplication: String deduplication (G1GC feature)

# ========================================
# Deprecated Parameters (JDK 21)
# ========================================

# JDK 9+ Deprecated Parameters:
# -XX:+PrintGCDetails (use -Xlog:gc* instead)
# -XX:+PrintGCTimeStamps (use -Xlog:gc*:time instead)
# -XX:+PrintGCDateStamps (use -Xlog:gc*:time instead)
# -Xloggc (use -Xlog:gc*:file instead)
# -XX:+UseGCLogFileRotation (use -Xlog:gc*:file:filecount=5,filesize=10m instead)

# JDK 10+ Deprecated Parameters:
# -XX:+UseContainerSupport (enabled by default, no need to set explicitly)

# JDK 21 Specific Notes:
# -XX:+UseBiasedLocking: Deprecated in JDK 15, removed in JDK 21
# -XX:+UseFastAccessorMethods: Deprecated in JDK 16, removed in JDK 21
# -XX:+UseLargePages: May not work on all systems
# -XX:+UseLargePagesInMetaspace: May not work on all systems

# ========================================
# GC Log File Locations
# ========================================

# Development: logs/gc-dev.log
# Testing: logs/gc-test.log
# Production: /tmp/gc-prod.log
# Docker: /tmp/gc-docker.log
# High Concurrency: /tmp/gc.log

# ========================================
# Heap Memory Configuration Best Practices
# ========================================

# Important: Xms and Xmx should be set to the same value
# Reasons:
# 1. Avoid JVM heap size adjustment during runtime, improving performance
# 2. In container environments, fixed heap size is better for resource management
# 3. Reduce memory fragmentation and GC overhead
# 4. Improve application stability after startup

# Container Environment Recommendation:
# -XX:MaxRAMPercentage=75.0 (use 75% of available memory as heap size)

# ========================================
# Usage Instructions
# ========================================

# Development Environment:
# export JAVA_OPTS="$DEV_JVM_OPTS"
# java $JAVA_OPTS -jar app.jar

# Production Environment:
# export JAVA_OPTS="$PROD_JVM_OPTS"
# java $JAVA_OPTS -jar app.jar

# Docker Environment:
# ENV JAVA_OPTS="$DOCKER_JVM_OPTS"
# java $JAVA_OPTS -jar app.jar

# High Concurrency Environment:
# export JAVA_OPTS="$HIGH_CONCURRENCY_JVM_OPTS"
# java $JAVA_OPTS -jar app.jar 